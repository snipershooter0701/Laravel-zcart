<?php
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Services; use DB; use App\Package; use Illuminate\Http\Request; use Illuminate\Support\Str; use Illuminate\Support\Facades\Artisan; class PackageInstaller { public $package; public $slug; public $namespace; public $path; public $migrations; public function __construct(Request $request, array $installable) { $this->package = array_merge($installable, $request->all()); $this->slug = $installable["\163\154\x75\x67"]; $this->namespace = "\x5c\x49\x6e\x63\145\x76\x69\157\x5c\x50\x61\143\153\x61\x67\145\x5c" . Str::studly($this->slug); $this->path = base_path("\x70\x61\143\x6b\141\x67\145\x73") . DIRECTORY_SEPARATOR . $this->slug; $this->migrations = str_replace(base_path(), '', $this->path . "\57\144\x61\164\141\142\x61\x73\x65\x2f\155\x69\147\162\141\x74\151\157\x6e\x73"); } public function install() { \Log::info("\x49\x6e\163\x74\x61\x6c\154\x69\156\x67\40\120\x61\x63\x6b\141\x67\145\40" . $this->slug); Package::create(array_merge($this->package, preparePackageInstallation($this->package))); $this->migrate()->seed(); return True; } private function migrate() { \Log::info("\x4d\151\147\x72\141\164\x69\x6e\x67\40\x73\164\141\x72\164\145\x64\x3a\x20" . $this->slug); Artisan::call("\155\x69\x67\162\141\x74\145", ["\55\55\x70\x61\x74\x68" => $this->migrations, "\55\x2d\x66\157\162\x63\145" => true]); \Log::info(Artisan::output()); return $this; } private function seed() { \Log::info("\123\x65\x65\144\151\156\x67\40\163\164\x61\162\164\x65\144\x3a\x20" . $this->slug); foreach (glob($this->path . "\x2f\144\141\x74\141\x62\141\163\145\57\163\x65\145\144\163\57\52\x2e\x70\x68\160") as $filename) { include $filename; $classes = get_declared_classes(); $migration = end($classes); Artisan::call("\144\142\x3a\163\145\145\144", ["\55\55\143\x6c\141\x73\x73" => $migration, "\x2d\55\x66\x6f\x72\x63\x65" => true]); \Log::info(Artisan::output()); EkrO6: } NKz9N: return $this; } public function uninstall() { \Log::info("\x55\x6e\x69\x6e\x73\164\x61\154\154\151\x6e\x67\40\x50\x61\x63\153\x61\147\145\x3a\40" . $this->slug); $class = $this->namespace . "\134\125\x6e\151\156\x73\x74\x61\154\x6c\145\x72"; if (class_exists($class)) { goto Ky91C; } return true; Ky91C: (new $class())->cleanDatabase(); return $this->rollback(); } private function rollback() { \Log::info("\122\157\154\154\x69\x6e\x67\40\142\x61\x63\153\x20\56\56\x2e\x20" . $this->slug); foreach (array_reverse(glob($this->path . "\57\144\141\164\141\142\x61\x73\x65\x2f\x6d\151\x67\x72\x61\164\151\x6f\156\163\x2f\x2a\x5f\52\x2e\160\x68\160")) as $filename) { include $filename; $migration = str_replace("\56\160\150\x70", '', basename($filename)); \Log::info("\122\x6f\x6c\154\151\x6e\147\40\142\141\x63\153\x3a\x20" . $migration); $class = Str::studly(implode("\x5f", array_slice(explode("\x5f", $migration), 4))); (new $class())->down(); if (DB::table("\x6d\151\147\x72\141\x74\151\x6f\156\163")->where("\155\x69\147\x72\x61\x74\151\157\x6e", $migration)->delete()) { goto QzvSO; } \Log::info("\x52\157\x6c\x6c\x62\141\x63\153\40\106\x41\x49\x4c\105\104\x3a\x20" . $migration); goto szHa4; QzvSO: \Log::info("\x52\157\154\154\x65\x64\40\142\141\x63\153\72\x20" . $migration); szHa4: J2YMj: } T5Xuy: return $this; } }